// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id       String     @id @default(uuid())
  name     String
  address  String
  createAt DateTime   @default(now())
  updateAt DateTime   @default(now())
  users    User[]
  roles    Role[]
  docs     Document[]
}

model User {
  id          String        @id @default(uuid())
  email       String        @unique
  name        String?
  username    String
  password    String
  company     Company       @relation(fields: [companyId], references: [id])
  companyId   String
  createAt    DateTime      @default(now())
  updateAt    DateTime      @default(now())
  UserOnRoles UserOnRoles[]
}

model Document {
  id        String   @id @default(uuid())
  name      String?
  createAt  DateTime @default(now())
  updateAt  DateTime @default(now())
  file      File[]
  company   Company  @relation(fields: [companyId], references: [id])
  companyId String
  DocOnRoles DocOnRoles[]
}

model File {
  id       String   @id @default(uuid())
  name     String?
  doc      Document @relation(fields: [docId], references: [id])
  docId    String
  value    String
  createAt DateTime @default(now())
  updateAt DateTime @default(now())
}

model UserOnRoles {
  role   Role   @relation(fields: [roleId], references: [id])
  roleId String
  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@id([roleId, userId])
}

model DocOnRoles {
  role   Role   @relation(fields: [roleId], references: [id])
  roleId String
  doc   Document   @relation(fields: [docId], references: [id])
  docId String

  @@id([roleId, docId])
}

model Role {
  id          String        @id @default(uuid())
  name        String
  company     Company       @relation(fields: [companyId], references: [id])
  companyId   String
  createAt    DateTime      @default(now())
  updateAt    DateTime      @default(now())
  UserOnRoles UserOnRoles[]
  DocOnRoles DocOnRoles[]
}
